<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace Sourcekin\Content\Model;

final class ValueType
{
    public const OPTIONS = [
        'Text' => 0,
        'Image' => 1,
        'Video' => 2,
        'Link' => 3,
        'Reference' => 4,
    ];

    public const Text = 0;
    public const Image = 1;
    public const Video = 2;
    public const Link = 3;
    public const Reference = 4;

    private $name;
    private $value;

    private function __construct(string $name)
    {
        $this->name = $name;
        $this->value = self::OPTIONS[$name];
    }

    public static function text(): self
    {
        return new self('Text');
    }

    public static function image(): self
    {
        return new self('Image');
    }

    public static function video(): self
    {
        return new self('Video');
    }

    public static function link(): self
    {
        return new self('Link');
    }

    public static function reference(): self
    {
        return new self('Reference');
    }

    public static function fromName(string $value): self
    {
        if (! isset(self::OPTIONS[$value])) {
            throw new \InvalidArgumentException('Unknown enum name given');
        }

        return self::{$value}();
    }

    public static function fromValue($value): self
    {
        foreach (self::OPTIONS as $name => $v) {
            if ($v === $value) {
                return self::{$name}();
            }
        }

        throw new \InvalidArgumentException('Unknown enum value given');
    }

    public function equals(ValueType $other): bool
    {
        return \get_class($this) === \get_class($other) && $this->name === $other->name;
    }

    public function name(): string
    {
        return $this->name;
    }

    public function value()
    {
        return $this->value;
    }

    public function __toString(): string
    {
        return $this->name;
    }
}
