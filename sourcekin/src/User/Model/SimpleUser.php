<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace Sourcekin\User\Model;

final class SimpleUser
{
    private $id;
    private $email;
    private $userName;
    private $password;

    public function __construct(UserId $id, EMail $email, UserName $userName, Password $password)
    {
        if (Assertion::email($email->toString(), 'this is not an email')) {
            throw new \InvalidArgumentException('meh');
        }

        if (Assertion::uuid($id->toString(), 'That is not a uuid')) {
            throw new \InvalidArgumentException('meh');
        }

        $this->id = $id;
        $this->email = $email;
        $this->userName = $userName;
        $this->password = $password;
    }

    public function id(): UserId
    {
        return $this->id;
    }

    public function email(): EMail
    {
        return $this->email;
    }

    public function userName(): UserName
    {
        return $this->userName;
    }

    public function password(): Password
    {
        return $this->password;
    }

    public function withId(UserId $id): SimpleUser
    {
        return new self($id, $this->email, $this->userName, $this->password);
    }

    public function withEmail(EMail $email): SimpleUser
    {
        return new self($this->id, $email, $this->userName, $this->password);
    }

    public function withUserName(UserName $userName): SimpleUser
    {
        return new self($this->id, $this->email, $userName, $this->password);
    }

    public function withPassword(Password $password): SimpleUser
    {
        return new self($this->id, $this->email, $this->userName, $password);
    }

    public static function fromArray(array $data): SimpleUser
    {
        if (! isset($data['id']) || ! \is_string($data['id'])) {
            throw new \InvalidArgumentException("Key 'id' is missing in data array or is not a string");
        }

        $id = UserId::fromString($data['id']);

        if (! isset($data['email']) || ! \is_string($data['email'])) {
            throw new \InvalidArgumentException("Key 'email' is missing in data array or is not a string");
        }

        $email = EMail::fromString($data['email']);

        if (! isset($data['userName']) || ! \is_string($data['userName'])) {
            throw new \InvalidArgumentException("Key 'userName' is missing in data array or is not a string");
        }

        $userName = UserName::fromString($data['userName']);

        if (! isset($data['password']) || ! \is_string($data['password'])) {
            throw new \InvalidArgumentException("Key 'password' is missing in data array or is not a string");
        }

        $password = Password::fromString($data['password']);

        return new self(
            $id,
            $email,
            $userName,
            $password
        );
    }

    public function toArray(): array
    {
        return [
            'id' => $this->id->toString(),
            'email' => $this->email->toString(),
            'userName' => $this->userName->toString(),
            'password' => $this->password->toString(),
        ];
    }
}
