<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace Sourcekin\Components\Rendering\Model;

final class Field
{
    private $name;
    private $content;

    public function __construct(Name $name, string $content)
    {
        $this->name = $name;
        $this->content = $content;
    }

    public function name(): Name
    {
        return $this->name;
    }

    public function content(): string
    {
        return $this->content;
    }

    public function withName(Name $name): Field
    {
        return new self($name, $this->content);
    }

    public function withContent(string $content): Field
    {
        return new self($this->name, $content);
    }

    public static function fromArray(array $data): Field
    {
        if (! isset($data['name']) || ! \is_string($data['name'])) {
            throw new \InvalidArgumentException("Key 'name' is missing in data array or is not a string");
        }

        $name = Name::fromString($data['name']);

        if (! isset($data['content']) || ! \is_string($data['content'])) {
            throw new \InvalidArgumentException("Key 'content' is missing in data array or is not a string");
        }

        $content = $data['content'];

        return new self($name, $content);
    }

    public function toArray(): array
    {
        return [
            'name' => $this->name->toString(),
            'content' => $this->content,
        ];
    }

    public function equals(Field $field): bool
    {
        if (\get_class($this) !== \get_class($field)) {
            return false;
        }

        return $this->name->toString() === $field->name->toString()
            && $this->content === $field->content;
    }
}
