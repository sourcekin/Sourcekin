<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace Sourcekin\Components\Common;

final class Param {
    private $name;
    private $content;

    public function __construct(Name $name, $content) {
        $this->name    = $name;
        $this->content = $content;
    }

    public function name(): Name {
        return $this->name;
    }

    public function content() {
        return $this->content;
    }

    public function withName(Name $name): Param {
        return new self($name, $this->content);
    }

    public function withContent($content): Param {
        return new self($this->name, $content);
    }

    public static function fromData(string $name, $content): Param {
        return new self(Name::fromString($name), $content);
    }

    public static function fromArray(array $data): Param {
        if (!isset($data['name']) || !\is_string($data['name'])) {
            throw new \InvalidArgumentException("Key 'name' is missing in data array or is not a string");
        }

        $name = Name::fromString($data['name']);

        if (isset($data['content'])) {
            if (!\is_string($data['content'])) {
                throw new \InvalidArgumentException("Value for 'content' is not a string in data array");
            }

            $content = $data['content'];
        }
        else {
            $content = NULL;
        }

        return new self($name, $content);
    }

    public function toArray(): array {
        return [
            'name'    => $this->name->toString(),
            'content' => $this->content,
        ];
    }

    public function equals(Param $param): bool {
        if (\get_class($this) !== \get_class($param)) {
            return FALSE;
        }

        return $this->name->toString() === $param->name->toString()
               && $this->content === $param->content;
    }
}
